% BMEN3010 Final Project
% Iris Li
% BMEN3010 Final Project Dec 2024
% Help from ChatGPT
% Make sure to have signal processing toolbox installed

close all; clc;

%% Variables
syms nri nrs vs
ncs = 0;
keR = 0.03;
kdegR = 0.0022;
krec = 0.08;
fR = 0.2;
fL = 0.5;
k_as = 7.2e7;
k_dis = 0.3;
CL = 0;
nli = 0;
nrt = 0.5e5;
kdegL = 0.01;
keC = 0.3;

NC = 1e9;
NA = 6.023e23;

%% A
dnrs = -k_as*CL*nrs + k_dis*ncs - keR*nrs + krec*(1-fR)*nri + vs == 0; % balance on surface receptor
dnri = keR*nrs + keC*ncs - (kdegR*fR + krec*(1-fR))*nri == 0; % balance on intracelular receptor
addition = nrs + ncs + nri == nrt; % equation 11.6.13 of total cell-associated receptor concentration

sol = solve([dnrs, dnri, addition], [vs, nri, nrs]); % solves the dnrs and dnri ODE's

% Simplify solutions:
VS = simplify(sol.vs);
NRI = simplify(sol.nri);
NRS = simplify(sol.nrs);

% Substitute parameters into the solved NRs and NRi ODE's
params = struct('k1', k_as, 'k_1', k_dis, 'keR', keR, 'keC', keC, ...
    'krec', krec, 'kdegR', kdegR, 'fR', fR, 'CL', CL, 'nrt', nrt);
vs_eval = double(subs(VS, params)); % Vs equation with params
V_S = double(vs_eval); % rename Vs equation
nri_eval = double(subs(NRI, params)); % NRi equation with params
nrs_eval = double(subs(NRS, params)); % NRs equation with params

% Once parameters are substituted, we obtain SS numerical values of Vs,
% NRi, and NRs:
disp('Solved SS form for N_RI, N_RS, VS: ');
fprintf('V_S = %.4f\n', vs_eval);
fprintf('N_RI = %.4f\n', nri_eval);
fprintf('N_RS = %.4f\n', nrs_eval);


%% B
% y(1) is NRS; y(2) is NRI

system = @(t,y) [
    -keR*y(1) + krec*(1-fR)*y(2) + V_S;  % balance on surface receptor
    keR*y(1) - (kdegR*fR + krec*(1-fR))*y(2) % balance on intracellular receptor
   ];

y0 = [nri_eval; nrs_eval]; % initial conditions from part a
timespan = [0,200];

[t,y] = ode45(system, timespan, y0); % solve the system of equations using the initial conditions

% extract solutions:
nrs_soln = y(:,1);
nri_soln = y(:,2);

% plot the solutions (dependent variable) vs. time (independent variable):
figure();
plot(t,nrs_soln, 'LineWidth', 1.5);
hold on
plot(t,nri_soln, 'LineWidth', 1.5);
title('(B) Receptor levels inside and outside cell');
ylim([0, max(max(nrs_soln), max(nri_soln))*1.5]);
xlim([50,200]);
xlabel('time (mins)');
ylabel('receptors/cell');
legend("Surface receptors (N_R_S)", "Inner Receptors (N_R_I)", 'Location', 'best');
grid on;
hold off


%% C

timespanCD = [0,240]; % time to steady state

% initial conditions:
nrs_initial = double(nrs_eval); % surface receptor level without ligand
ncs_initial = 0; % no LR complexes at first
nri_initial = double(nri_eval); % intracellular receptor level without ligand
nli_initial = 0; % no intracellular ligands at first

CLarray = [1e-9,2e-9,5e-9,1e-8,5e-8,1e-7]; % different ligand concentrations considered

figure();

for i = 1:length(CLarray)
    CL_initial = CLarray(i); % iterates through the list of different CL's and puts each value through the solved ODE's
    initialconds = [CL_initial, nrs_initial, ncs_initial, nri_initial, nli_initial];
    
    % solve each ODE in the system to obtain time-based equations in y
    % array
    [t,y] = ode45(@(t,y) syseqns(t,y,k_as,k_dis,keR,keC,krec,kdegR,kdegL,fR,fL,NC,NA,V_S), timespanCD, initialconds);
    
    % plot each of these time-based equations:
    subplot(3,2,i);
    plot(t,y(:,5), 'LineWidth', 1); % C_Li - intracellular ligands
    hold on
    plot(t,y(:,3), 'LineWidth', 1); % N_Cs - LR complexes
    plot(t,y(:,2), 'LineWidth', 1); % N_Rs - surface receptors
    plot(t,y(:,4), 'LineWidth', 1); % NRi - intracellular receptors
    title(['C_L = ', num2str(CL_initial, '%.1e'), ' M']);
    xlabel('time (mins)');
    ylabel('Concentration'); % units
    legend('N_L_I', 'N_C_S', 'N_R_S', 'N_R_I');
    grid on;
end

sgtitle('(C) N_L_I and N_C_S vs. Time for Different C_L levels'); % overall title

%% D
% Pre-allocations:
ratios = zeros(length(CLarray), 250);
time = cell(length(CLarray), 1);

for i=1:length(CLarray)
    initialCL = CLarray(i); % same list of CL values used from part C
    intl = [CL_initial, nrs_initial, ncs_initial, nri_initial, nli_initial];
    
    % solve system of all ODE's (same parameters)
    [t,y] = ode45(@(t,y) syseqns(t,y,k_as,k_dis,keR,keC,krec,kdegR,kdegL,fR,fL,NC,NA,V_S), timespanCD, intl);

    % CL/CL0 ratio (R)
    CLtot = y(:,1); % material balance on the ligand
    R = CLtot/initialCL; % ratio of CL/CL0 using the specific CL of the iteration
    ratios(i, 1:length(t)) = R; % this ratio is stored in the cells indexing from 1 to the end of the t vector (very long)
    time{i} = t; % the vector of times from this iteration's solving is stored in time cell for plotting later
end

figure(); % plot each ratio of CL/CL0 generated by each different CL0
hold on
for i = 1:length(CLarray)
    plot(time{i}, ratios(i, 1:length(time{i})), 'LineWidth', 1); 
end
grid on;
xlabel('time (mins)');
ylabel('C_L / C_L_0');
ylim([0 1]);
legend(arrayfun(@(c) sprintf('C_L = %.1e', c), CLarray, 'UniformOutput', false), 'Location', 'best');
title('(D) Ligand depletion (C_L / C_L_0) vs. time for different C_L levels');
hold off

%% E
Nrs = double(nrs_eval);
Nri = double(nri_eval);
Ncs = 0;
Nli = 0;

CL0 = logspace(-10,-5,50);
timespan3 = [0 240];

Nli_vals = cell(1,3);
keC_vals = [0.03, 0.3, 0.03];
keR_vals = [0.3, 0.3, 0.03];

for i = 1:length(keC_vals)
    k_eC = keC_vals(i);
    k_eR = keR_vals(i);

    nli_case = zeros(size(CL0));

    for j = 1:length(CL0)
        init_conds = [CL0(j), Nrs, Ncs, Nri, Nli];

        [t,y] = ode45(@(t,y) syseqns(t,y,k_as,k_dis,k_eR,k_eC,krec,kdegR,kdegL,fR,fL,NC,NA,V_S), timespan3, init_conds);

        nli_case(j) = y(end, 5);
    end
    
    Nli_vals{i} = nli_case;
end

figure();
hold on
loglog(CL0, Nli_vals{1}, '-', 'LineWidth', 1.5, 'DisplayName', strcat('Class 1 (k_e_C= ', num2str(keC_vals(1)),' k_e_R= ', num2str(keR_vals(1)), ')'));
loglog(CL0, Nli_vals{2}, '-', 'LineWidth', 1.5, 'DisplayName', strcat('Class 2 low (k_e_C= ', num2str(keC_vals(2)),' k_e_R= ', num2str(keR_vals(2)), ')'));
loglog(CL0, Nli_vals{3}, '-', 'LineWidth', 1.5, 'DisplayName', strcat('Class 2 high (k_e_C= ', num2str(keC_vals(3)),' k_e_R= ', num2str(keR_vals(3)), ')'));
grid on;
xlabel('Initial [C_L] (extracellular ligand conc.) (M)');
ylabel('Number of SS intracellular ligands (N_L_I)')
title('(E) Comparison of N_L_I for different receptor classes');
legend('Location', 'best');
set(gca, 'XScale', 'log', 'YScale', 'log'); 
hold off

%% F -- analyze to see if this is all needed
% 1) Pulse
C_L = 1e-7;
[t,y] = ode45(@(t,y) syseqns(t,y,k_as,k_dis,keR,keC,krec,kdegR,kdegL,fR,fL,NC,NA,V_S), timespan3, [C_L, init_conds(1,2:5)]);
CLpulse = y(:,1);
Nrspulse = y(:,2);
Ncspulse = y(:,3);
Nripulse = y(:,4);
NLipulse = y(:,5);
figure();
plot(t,CLpulse,'y','LineWidth',1,'DisplayName','C_L pulse');
plot(t,Nrspulse, 'r', 'LineWidth', 1, 'DisplayName', 'N_R_s pulse'); hold on
plot(t,Ncspulse, 'g', 'LineWidth', 1, 'DisplayName', 'N_C_s pulse');
plot(t,Nripulse, 'b', 'LineWidth', 1, 'DisplayName', 'N_R_i pulse');
plot(t,NLipulse, 'k', 'LineWidth', 1, 'DisplayName', 'N_L_i pulse');
xlabel('time (mins)');
ylabel('molecules per cell');
title('(F) Pulse');
legend('show');
ylim([0 1e5]);
grid on; hold off

Ncs_end = y(end,3); % end of pulse value of surface LR complexes
Nrs_end = y(end,2); % end of pulse value of surface receptors
Nri_end = y(end,4); % end of pulse value of intracellular receptors
Cli_end = y(end,5); % end of pulse value of intracellular ligands

% Chase:
intl = [C_L; Nrs_end; Ncs_end; Nri_end; Cli_end];
[t2,y2] = ode45(@(t,y) syseqns(t,y,k_as,k_dis,keR,keC,krec,kdegR,kdegL,fR,fL,NC,NA,V_S), timespan3, intl);

chased = [y;y2];
CLchase = chased(:,1);
Nrschase = chased(:,2);
Ncschase = chased(:,3);
Nrichase = chased(:,4);
NLichase = chased(:,5);

t_combo = [t; t(end) + t2];
% Plot of pulse then chase
figure();
plot(t_combo,CLchase,'y','LineWidth',1,'DisplayName','C_L pulse');
plot(t_combo,Nrschase, 'r', 'LineWidth', 1, 'DisplayName', 'N_R_s pulse chase'); hold on
plot(t_combo,Ncschase, 'g', 'LineWidth', 1, 'DisplayName', 'N_C_s pulse chase');
plot(t_combo,Nrichase, 'b', 'LineWidth', 1, 'DisplayName', 'N_R_i pulse chase');
plot(t_combo,NLichase, 'k', 'LineWidth', 1, 'DisplayName', 'N_L_i pulse chase');
xlabel('time (mins)');
ylabel('molecules per cell');
title('(F) Pulse and Chase');
legend('show');
ylim([0 1e5]);
grid on; hold off

% internalization per time point:
receptors = Nrichase - Nrschase;
ligands = NLichase - Ncschase;

figure();
plot(t_combo, receptors, 'r', 'LineWidth', 1, 'DisplayName', 'Internalized receptors'); hold on
plot(t_combo, ligands, 'b', 'LineWidth', 1, 'DisplayName', 'Internalized ligands');
xlabel('time (mins)');
ylabel('molecules per cell');
title('(F) Internalization of molecules over time');
legend('show');
ylim([0 1e5]);
grid on; hold off



%% System of equations
% eqns stands for equations

function eqns = syseqns(t,y,k_as,k_dis,keR,keC,krec,kdegR,kdegL,fR,fL,NC,NA,V_S)
    C_L = y(1); % ligand concentration
    N_RS = y(2); % surface receptors / cell
    N_CS = y(3); % LR complexes / cell
    N_RI = y(4); % intracellular receptors / cell
    N_LI = y(5); % intracellular ligands / cell
    eqns = zeros(5,1); % preallocate eqns array
    % All ODE's:
    eqns(1) = (NC/NA)*1e3*(-k_as*y(1)*y(2)+k_dis*y(3)+krec*(1-fL)*y(5)); % ligand
    eqns(2) = -k_as*y(1)*y(2) + k_dis*y(3) - keR*y(2) + krec*(1-fR)*y(4) + V_S; % surface receptor
    eqns(3) = k_as*y(1)*y(2) -(k_dis+keC)*y(3); % LR complex
    eqns(4) = keR*y(2) + keC*y(3) - (kdegR*fR + krec*(1-fR))*y(4); % intracellular receptor
    eqns(5) = keC*y(3) - (kdegL*fL + krec*(1-fL))*y(5); % intracellular ligand
end